#pragma once

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

// Fortran interface

float @ALIEN_BLAS_SDOT@(const int *n, const float *x, const int *incx,
const float *y, const int *incy);
double @ALIEN_BLAS_DDOT@(const int *n, const double *x, const int *incx,
const double *y, const int *incy);
void @ALIEN_BLAS_SAXPY@(const int *n, const float *alpha, const float *x,
const int *incx, float *y, const int *incy);
void @ALIEN_BLAS_DAXPY@(const int *n, const double *alpha, const double *x,
const int *incx, double *y, const int *incy);
void @ALIEN_BLAS_SCOPY@(const int *n, const float *x, const int *incx, float *y, const int *incy);
void @ALIEN_BLAS_DCOPY@(const int *n, const double *x, const int *incx,
double *y, const int *incy);
void @ALIEN_BLAS_SSCAL@(const int *n, const float *alpha, float *x, const int *incx);
void @ALIEN_BLAS_DSCAL@(const int *n, const double *alpha, double *x, const int *incx);
double @ALIEN_BLAS_DNRM2@(const int *n, const double *x, const int *incx);

// CBLAS interface.

float cblas_sdot(const int n, const float *x, const int incx, const float *y,
const int incy) {
return @ALIEN_BLAS_SDOT@(&n, x, &incx, y, &incy);
}

double cblas_ddot(const int n, const double *x, const int incx, const double *y,
const int incy) {
return @ALIEN_BLAS_DDOT@(&n, x, &incx, y, &incy);
}

void cblas_saxpy(const int n, const float alpha, const float *x, const int incx,
float *y, const int incy) {
@ALIEN_BLAS_SAXPY@(&n, &alpha, x, &incx, y, &incy);
}

void cblas_daxpy(const int n, const double alpha, const double *x,
const int incx, double *y, const int incy) {
@ALIEN_BLAS_DAXPY@(&n, &alpha, x, &incx, y, &incy);
}

void cblas_scopy(const int n, const float *x, const int incx, float *y,
const int incy) {
@ALIEN_BLAS_SCOPY@(&n, x, &incx, y, &incy);
}

void cblas_dcopy(const int n, const double *x, const int incx, double *y,
const int incy) {
@ALIEN_BLAS_DCOPY@(&n, x, &incx, y, &incy);
}

void cblas_sscal(const int n, const float alpha, float *x, const int incx) {
@ALIEN_BLAS_SSCAL@(&n, &alpha, x, &incx);
}

void cblas_dscal(const int n, const double alpha, double *x, const int incx) {
@ALIEN_BLAS_DSCAL@(&n, &alpha, x, &incx);
}

double cblas_dnrm2(const int n, const double *x, const int incx) {
return @ALIEN_BLAS_DNRM2@(&n, x, &incx);
}

#ifdef __cplusplus
}
#endif // __cplusplus
