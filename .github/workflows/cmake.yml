name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: arcaneframework/alien-base:ubuntu20.04

    steps:
      # Checkout v2 does not include files listed in .gitattributes
    - uses: actions/checkout@v1

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B /build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

    - name: Build
      # Build your program with the given configuration
      run: cmake --build /build --config ${{env.BUILD_TYPE}}

    - name: Test
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: cd /build && ctest -V -C ${{env.BUILD_TYPE}}
      
