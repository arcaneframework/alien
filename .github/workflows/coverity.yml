name: Coverity Scan

on: workflow_dispatch

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: ubuntu coverity
    runs-on: ubuntu-latest
    container: ghcr.io/arcaneframework/alien-base:ubuntu20.04
    steps:
      # Checkout v2 does not include files listed in .gitattributes
      - uses: actions/checkout@v1

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `C MAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: |
          ${{matrix.config.precommand}}
          cmake -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DALIEN_DEFAULT_OPTIONS:BOOL=ON -DALIEN_PLUGIN_HYPRE:BOOL=ON -DALIEN_PLUGIN_PETSC:BOOL=ON

      - name: Set up coverity
        run: |
          curl https://scan.coverity.com/download/linux64 \
            --data "token=${COV_TOKEN}&project=arcaneframework%2Falien" \
            -o coverity_tool.tgz
          mkdir coverity-tool
          tar -xzf coverity-tool.tar.gz --strip 1 -C coverity-tool
        shell: bash
        env:
          COV_TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Build with coverity
        # Build, using cov-build and cov-int directory as output (mandatory)
        run: |
          export PATH="${PWD}/cov-analysis/bin:${PATH}"
          cov-build --dir cov-int make -C build -j $(nproc)
        shell: bash

      - name: Submit results to Coverity Scan
        run: |
          tar -czvf cov-int.tgz cov-int
          curl \
            --form project="${{ inputs.project }}" \
            --form token="$COV_TOKEN" \
            --form email="$COV_EMAIL" \
            --form file=@cov-int.tgz \
            --form version="${{ github.sha }}" \
            --form description="${{ github.repository }} / ${{ github.ref }}" \
            "https://scan.coverity.com/builds?project=arcaneframework%2Falien"
        shell: bash
        env:
          COV_TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
          COV_EMAIL: ${{ secrets.COVERITY_SCAN_EMAIL }}
